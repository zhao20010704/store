<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace属性作用：用于指定当前的映射文件和那个接口进行映射，需要指定接口的文件路径，需要标注包的完整路径接口-->
<mapper namespace="com.zzt.store.mapper.UserMapper">
<!--    自定义映射规则：resultMap标签来完成映射规则的定义-->
<!--    核心属性
            1.id属性：表示给这个映射分配一个唯一的id值，对应的就是resultMap="id属性值"属性的取值
            2.type属性：取值是一个类，表示的是数据库中的查询结果与Java类中的哪个实体类进行结果集的映射

-->
    <resultMap id="UserEntityMap" type="com.zzt.store.entity.User">
<!--        将表的资源和类的属性不一致字段进行匹配指定，名称一致的字段可以忽略不写-->
<!--
            配合完成名称不一致的映射：
            column=表资源中的名称
            property 类在的名称
-->
<!--        在定义映射规则时，主键不可以省略-->
        <result column="is_delete" property="isDelete"></result>
        <result column="create_user" property="createUser"></result>
        <result column="create_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

<!--    id属性:表示映射的接口中的方法的名称，直接在标签的内容来编写SQL语句-->
<!--
        useGeneratedKeys 开启某个自动的值递增（主键设置为递增）
        keyProperty 将那个字段作为主键，开启自增
-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        insert into t_user (
        uid,username,password,salt,phone,email,gender,avatar,is_delete,
        created_user,created_time,modified_user,modified_time
        ) values(
            #{uid},#{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},#{isDelete},
            #{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )
<!--        select语法在执行的时候，查询的结果是一个对象，多个对象-->
<!--        resultType：表示查询的结果集类型，只需要指定对应的映射类型，并且包含完整的包接口，resultType="com.zzt.store.entity.User"-->
<!--        resultMap:标签当表的资源和类的对象属性名不同时，来自自定义查询结果集的映射规则，-->
    </insert>
    <select id="findByUsername" resultMap="UserEntityMap">
        select * from t_user where username = #{username}
    </select>

</mapper>